% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pop.sim.r
\name{pop.sim}
\alias{pop.sim}
\title{Simple population simulations}
\usage{
pop.sim(
  g0,
  e,
  r.ho,
  nu,
  N = 100,
  nb.gen = 10,
  pop.size = 25000,
  digest = TRUE,
  keep.N.kappa = FALSE
)
}
\arguments{
\item{g0}{Standard deviation of gametic value in a population without assortative mating}

\item{e}{Standard deviation of environmental effects}

\item{r.ho}{Correlation between mates}

\item{nu}{Correlation between parents' and offspring environmental effects}

\item{N}{Number of causal variants}

\item{nb.gen}{Number of generations}

\item{pop.size}{Population size}

\item{digest}{Logical. Set to 'TRUE' to send back only a digest of the results}

\item{keep.N.kappa}{Logical. Set to 'TRUE' to keep trace of N kappa bar.}
}
\value{
if 'digest' is 'TRUE', a data frame similar to the result of 'pop.evolution', with an additional
column for 'e' which contain the sd of the environmental components at each generation (this fluctuates
slightly around the value of the corresponding parameter, due to random sampling). If 'digest' is 'FALSE',
a list with member 'digest' (the digest as described before), 'G' (the matrix of genotypes at the last
generation), 'A' (the genetic value at the last generation), 'E' (the environmental value at the last 
generation), 'P' (the phenotypes at the last generation).
}
\description{
Simulate the evolution of a population with Assortative Mating and Vertical Cultural Transmission, with unlinked causal variants
}
\details{
Will simulate a population under Assortative Mating and Vertical Cultural Transmission with the parameters
supplied. Generations are non overlapping.

All SNPs have maf = 0.5 and are unlinked. Mate pairs are formed and eachh pair has two offsprings.

Beware: setting 'keep.N.kappa' to 'TRUE' results
in lengthy computations.
}
\examples{
R <- pop.sim(g0 = sqrt(0.5), e = 1, r.ho = 0.6, nu = 0.4, 25000, N = 100, nb.gen = 20, TRUE, TRUE)
ev <- pop.evolution(g0 = sqrt(0.5), e = 1, r.ho = 0.6, nu = 0.4, N = 100, nb.gen = 20) 
par(mfrow=c(2,2))
plot(R$t, R$rho, type = "o", xlab = "t", ylab = "rho")
lines(ev$t, ev$rho, col = "red")
plot(R$t, R$N.kappa, type = "o", xlab = "t", ylab = expression(N * bar(kappa)))
lines(ev$t, ev$N.kappa, col = "red")
plot(R$t, R$a, type = "o", xlab = "t", ylab = "a") 
lines(ev$t, ev$a, col = "red")
plot(R$t, R$r.ga, type = "o", xlab = "t", ylab = expression(r[ga]))
lines(ev$t, ev$r.ga, col =" red")

}
